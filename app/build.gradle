apply plugin: 'com.android.application'
apply from: '../base.gradle'
apply from: '../aop.gradle'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'kotlin-kapt'
apply plugin: 'apk-change-name'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    defaultConfig {
        applicationId project.APPLICATION_ID
        versionCode 1
        versionName "1.0"
        //设置支持的SO库架构
        ndk {
            abiFilters "armeabi-v7a", "x86_64"
        }
        //只支持 中文简体
        resConfigs "zh-rCN"
        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    // This block is different from the one you use to link Gradle
    // to your CMake or ndk-build script.
    externalNativeBuild {
        // Encapsulates your CMake build configurations.
        // cmake选项：https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.html
        cmake {
            // Provides a relative path to your CMake build script.
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    //将res文件夹中的资源以模块的形式分类
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res/jetpack/viewmodel',
                    'src/main/res/main',
                    'src/main/res/ui/adapter',
                    'src/main/res/ui/anim',
                    'src/main/res/ui/appbarlayout',
                    'src/main/res/ui/banner',
                    'src/main/res/ui/card',
                    'src/main/res/ui/constraint',
                    'src/main/res/ui/download',
                    'src/main/res/ui/drawer',
                    'src/main/res/ui/image',
                    'src/main/res/ui/imagescaletype',
                    'src/main/res/ui/layout2bitmap',
                    'src/main/res/ui/loop',
                    'src/main/res/ui/network',
                    'src/main/res/ui/partition',
                    'src/main/res/ui/player',
                    'src/main/res/ui/recyclerview',
                    'src/main/res/ui/refresh',
                    'src/main/res/ui/social',
                    'src/main/res/ui/viewattribute',
                    'src/main/res/ui/viewswitcher',
                    'src/main/res/ui/webview',
                    'src/main/res/ui/youtu',
                    'src/main/res/uiutils',
            ]
        }
        debug {
            java.srcDirs = ['src/debug/java']
            res.srcDirs = [
                    'src/debug/res/fps',
                    'src/debug/res'
            ]
        }
        release {
            java.srcDirs = ['src/release/java']
        }
    }
    //lint配置
    lintOptions {
        /**
         * 暂时设定为false，AGP从4.0.1降到3.6.1之后会报错：
         * /Users/fqxyi/.gradle/caches/modules-2/files-2.1/com.squareup/kotlinpoet/1.6.0/6ce4c42da0daf2ba11a4180d33360e8c049ef5b8/kotlinpoet-1.6.0.jar:
         * Error: Invalid package reference in com.squareup:kotlinpoet; not included in Android:
         * javax.tools. Referenced from com.squareup.kotlinpoet.FileSpec. [InvalidPackage]
         */
        //true：检测出错时停止构建
        abortOnError false
    }
}

//配置assemble任务依赖lint，编译时就会执行Lint检查
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def lintTask = tasks["lint${variant.name.capitalize()}"]
        output.assemble.dependsOn lintTask
    }
}

dependencies {
    implementation files('libs/javassist.jar')
    //library
    rootProject.ext.libs.each { lib ->
        switch (lib.key) {
            case "compiler":
                lib.value.each { item ->
                    kapt item.value
                }
                break
            case "debug":
                lib.value.each { item ->
                    debugImplementation item.value
                }
                break
            case "test":
            case "compileOnly":
                break
            default:
                lib.each { item ->
                    implementation item.value
                }
        }
    }
    //module
    rootProject.ext.module.each { lib ->
        switch (lib.key) {
            case "compiler":
                lib.value.each { item ->
                    kapt item.value
                }
                break
            case "lint":
                break
            default:
                lib.each { item ->
                    implementation item.value
                }
        }
    }
    api 'com.alibaba:arouter-api:1.5.0'
    kapt 'com.alibaba:arouter-compiler:1.2.2'
}